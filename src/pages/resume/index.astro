---
import Section from "./_components/BaseSection.astro";
import SkillsEntry from "./_components/SkillsEntry.astro";
import Entry from "./_components/BaseEntry.astro";
import Header from "./_components/Header.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { env } from "@/utils";
import {
  compareCvEntries,
  cvEntries,
  createCvEntryTypeGuard as isType,
} from "@/content";

const summary = cvEntries.find(({ slug }) => slug === "summary")!;

const experience = cvEntries.filter(isType("experience"));
const projects = cvEntries.filter(isType("open-source")).sort(compareCvEntries);
const certifications = cvEntries.filter(isType("certification"));
const education = cvEntries.filter(isType("education"));
const skills = cvEntries.filter(isType("skills")).sort(compareCvEntries);

const { Content: Summary } = env.BUILD_INCLUDE_PERSONAL
  ? await summary.render()
  : { Content: null };
---

<style is:global>
  :root { background-color: white; scroll-behavior: smooth }

  @page { margin: 0.5in 0in }
  @page:first { margin-top: 0in }

  @media print {
    :root {
      background-color: inherit;
      font-size: 12px;
      print-color-adjust: exact;
    }
  }
</style>

<BaseLayout
  title="Sandeep Dilip's Resume"
  description="Sandeep Dilip's professional experience, open source projects, contact links, and other information."
  class="font-mono"
>
  <Header class="mx-auto mb-12 mt-6 max-w-5xl px-4 sm:mt-12 print:max-w-full md:px-12 sm:px-8" />

  <main class="mx-auto max-w-max text-sm text-slate-700 sm:text-base">

    {Summary && (
      <Section heading="Summary">
        <div class="m-5 mb-0 max-w-prose border-l-3 border-slate-200 pl-3 font-375 leading-tight">
          <Summary />
        </div>
      </Section>
    )}

    <Section heading="Experience">
      {
        experience
          .filter(({ data }) => data.experience === "work")
          .map(exp => (
            <Entry
              heading={exp.data.title}
              subheading={exp.data.organization.name}
              time={[exp.data.start, exp.data.end]}
              entry={exp}
            />
          ))
      }
    </Section>

    <Section heading="Volunteering">
      {
        experience
          .filter(({ data }) => data.experience === "volunteering")
          .map(exp => (
            <Entry
              heading={exp.data.title}
              subheading={exp.data.organization.name}
              time={[exp.data.start, exp.data.end]}
              entry={exp}
            />
          ))
      }
    </Section>

    <Section heading="Certification">
      {
        certifications.map(({ data: cert }) => (
          <Entry
            link={cert.url}
            heading={cert.name}
            subheading={cert.organization.name}
            time={cert.issueDate}
          />
        ))
      }
    </Section>

    <Section heading="Education">
      {
        education.map(({ data: edu }) => (
          <Entry
            heading={`${edu.degree} ${edu.major}`}
            subheading={edu.school.name}
            time={[edu.start, edu.end]}
          />
        ))
      }
    </Section>

    <Section heading="Internships">
      {
        experience
          .filter(({ data }) => data.experience === "internship")
          .map(exp => (
            <Entry
              heading={exp.data.title}
              subheading={exp.data.organization.name}
              time={[exp.data.start, exp.data.end]}
            />
          ))
      }
    </Section>

    <Section heading="Open source">
      {
        projects
          .filter(proj => !proj.data.draft)
          .map(proj => (
            <Entry
              link={proj.data.githubUrl}
              heading={proj.data.title}
              subheading={proj.data.description}
              entry={proj}
            />
          ))
      }
    </Section>

    <Section heading="Skills">
      {
        skills.map(entry => <SkillsEntry {entry} />)
      }
    </Section>
  </main>
  <div class="h-[20vh] print:hidden"></div>
</BaseLayout>
