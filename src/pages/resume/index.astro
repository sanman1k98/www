---
import {
  cvEntries,
  createCvEntryTypeGuard as isType,
} from "@/content";
import { env } from "@/utils"

import BaseLayout from "@/layouts/BaseLayout.astro";
import Section from "./_components/BaseSection.astro";
import Contact from "./_components/Contact.astro";
import SkillDetails from "./_components/SkillDetails.astro";
import Experience from "./_components/ExperienceEntry.astro";
import OpenSource from "./_components/OpenSourceEntry.astro";
import Certification from "./_components/CertificationEntry.astro";
import Education from "./_components/EducationEntry.astro";

const skills = cvEntries.filter(isType("skills"));
const experience = cvEntries.filter(isType("experience"));
const projects = cvEntries.filter(isType("open-source"));
const volunteering = cvEntries.filter(isType("volunteering"));
const certifications = cvEntries.filter(isType("certification"));
const education = cvEntries.filter(isType("education"));

let Objective;
if (env.BUILD_INCLUDE_PERSONAL) {
  const objective = cvEntries.find(entry => entry.slug === "objective")!;
  Objective = (await objective.render()).Content;
}
---

<style is:global>
  :root {
    background-color: white;
  }

  @media print {
    :root {
      font-size: 10.5px;
      print-color-adjust: exact;
      background-color: inherit;
    }
  }
</style>

<BaseLayout
  title="Sandeep Dilip's Resume"
  description="Sandeep Dilip's professional experience, open source projects, contact links, and other information."
>
  <header class="
    container max-w-5xl
    mx-auto my-6 px-6 sm:px-10
    flex justify-between items-center
    font-mono
  ">
    <div class="text-left">
      <h1 class="text-3xl tracking-tighter font-600 text-slate-900">
        <a href="/">Sandeep Dilip</a>
      </h1>
      <p class="text-slate-500">Software Developer</p>
    </div>
    <Contact class={`
      text-2xl text-center
      sm:text-base sm:text-right 
      print:text-right print:text-sm!
    `}/>
  </header>

  <main class="mx-auto grid grid-cols-1 lg:grid-cols-[max-content_max-content] justify-center lg:gap-x-10 px-6 font-mono text-sm sm:text-base text-slate-700">
    {env.BUILD_INCLUDE_PERSONAL && Objective && (
      <Section
        heading="Objective"
        class="lg:col-span-2 mx-auto max-w-prose lg:max-w-4xl"
      >
        <div class="m-3 leading-tight font-400">
          <Objective />
        </div>
      </Section>
    )}

    <Section
      heading="Skills"
      class="sm:mx-auto sm:w-[65ch] lg:w-auto lg:max-w-prose"
    >
      <div class="w-48 ml-3 md:ml-0 md:flex lg:block justify-between pr-8">
        <SkillDetails entry={skills.find(entry => entry.data.category === "Languages")!}/>
        <SkillDetails entry={skills.find(entry => entry.data.category === "Technologies")!}/>
        <SkillDetails entry={skills.find(entry => entry.data.category === "Miscellaneous")!}/>
      </div>
    </Section>

    <div class="max-w-prose mx-auto">
      <Section heading="Experience">
        {
          experience.filter(exp => !exp.data.internship).map(exp => <Experience entry={exp} />)
        }
      </Section>

      <Section heading="Open source">
        {
          projects.filter(proj => !proj.data.draft).map(proj => <OpenSource entry={proj} />)
        }
      </Section>

      <Section heading="Certification">
        {
          certifications.map(cert => <Certification entry={cert} />)
        }
      </Section>

      <Section heading="Volunteering">
        {
          volunteering.map(vol => <Experience entry={vol} />)
        }
      </Section>

      <Section heading="Education">
        {
          education.map(edu => <Education entry={edu} />)
        }
      </Section>

      <Section heading="Internships">
        {
          experience.filter(exp => exp.data.internship).map(exp => <Experience entry={exp} />)
        }
      </Section>
    </div>
  </main>
</BaseLayout>
