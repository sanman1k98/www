---
import type { HTMLAttributes } from "astro/types";
import { env } from "@/utils"
import { socials } from "@/content";

// Explicitly define array to specify order of dynamically-generated elements
const links = [
  socials.linkedin,
  socials.github,
];

type Props = HTMLAttributes<"address">;
const { class: className } = Astro.props;
---

<address class:list={["[&_a]:underline [&_a]:text-cyan-600", className]}>
  {// TODO: use icons for social links }
  <ul class="flex justify-center [&_li]:px-4">
    {env.BUILD_INCLUDE_PERSONAL && (
      <li class="hidden print:inline">
        <a href={`mailto:${env.PERSONAL_EMAIL}`}>
          {env.PERSONAL_EMAIL}
        </a>
      </li>
      <li class="hidden print:inline">
        <a href={`tel:${env.PERSONAL_PHONE}`}>
          {env.PERSONAL_PHONE}
        </a>
      </li>
    )}
    <li class="hidden print:inline">
      <a href={import.meta.env.SITE}>Portfolio</a>
    </li>
    {links.map(link => {
      if (!link) return;
      const { text, ...attrs } = link;
      return (
        <li>
          <a { ...attrs }>{text}</a>
        </li>
      )})
    }
  </ul>
</address>
