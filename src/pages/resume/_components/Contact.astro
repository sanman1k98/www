---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";
import { env } from "@/utils"
import { socials } from "@/content";

// Explicitly define array to specify order of dynamically-generated elements
const links = [
  { text: "Website", href: import.meta.env.SITE },
  socials.linkedin,
  socials.github,
];

if (env.BUILD_INCLUDE_PERSONAL) links.unshift(
  { text: env.PERSONAL_EMAIL, href: `mailto:${env.PERSONAL_EMAIL}` },
  { text: env.PERSONAL_PHONE, href: `tel:${env.PERSONAL_PHONE}` }
)

type Props = HTMLAttributes<"address">;
const { class: className } = Astro.props;
---

<style>
</style>

<address class:list={["", className]}>
  <ul class="print:flex print:divide-x-1">
    {
      links.map(link => {
        if (!link) return;
        const { text, icon, ...attrs } = { icon: null, ...link };
        return (
          <li class:list={["print:px-4", !icon && "hidden print:list-item"]}>
            <a class="group flex justify-end items-center transition duration-300 text-slate-500" { ...attrs }>
              <span class="hidden sm:inline transition duration-300 text-slate-700 underline underline-offset-2 decoration-1.5 decoration-sky-600 group-hover:text-sky-700 group-hover:decoration-sky-400">{text}</span>
              {icon && <Icon name={icon} class="print:hidden inline-block size-[1.2em] ml-1 text-sky-700 transition duration-300 group-hover:text-sky-500"/>}
            </a>
          </li>
        )
      })
    }
  </ul>
</address>
