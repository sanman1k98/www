---
import type { CollectionEntry } from "astro:content";

type Props = {
  entry?: CollectionEntry<"cv">,
  link?: string,
  heading?: string,
  subheading?: string,
  date?: string,
};

const {
  entry,
  link,
  heading,
  subheading,
  date,
} = Astro.props;

let Content;

if (entry) {
  const rendered = await entry.render();
  Content = rendered.Content;
}
---

<style>
  article > div :global(ul) {
    margin-left: 2ch;
    list-style-type: "- ";
    list-style-position: outside;
  }

  article > div :global(li) {
    margin-bottom: 0.3rem;
  }
</style>

<article class="m-3 mb-5">
  <header class="mb-2">
    {(Astro.slots.has("heading") || heading) && (
      <h3 class="leading-snug font-600 text-slate-700 text-lg tracking-tight">
        {link ? (
          <a
            class="group flex max-w-fit decoration-current decoration-1 link"
            href={link}
            target="_blank"
          >
            <span><slot name="heading">{heading}</slot></span>
            <div class="
              print:hidden
              i-ph-arrow-up-right-bold
              transition-transform duration-200
              opacity-50 scale-85
              group-hover:translate-x-1 group-hover:-translate-y-1
              group-hover:opacity-100 group-hover:scale-100
            "></div>
          </a>
        ) : (
          <slot name="heading">{heading}</slot>
        )}
      </h3>
    )}
    {(Astro.slots.has("subheading") || subheading) && (
      <p class="leading-tight text-slate-500 italic">
        <slot name="subheading">{subheading}</slot>
      </p>
    )}
    <slot name="after-subheading"/>
  </header>
  {(Astro.slots.has("default") || Content) && (
    <div class="leading-tight">
      <slot>
        <Content />
      </slot>
    </div>
  )}
</article>
