---
import type { CollectionEntry } from "astro:content";

type Props = {
  entry?: CollectionEntry<"cv">,
  link?: string,
  heading?: string,
  subheading?: string,
  "after-subheading"?: string,
  time?: string | Date | [Date, Date?]
};

const {
  entry,
  link,
  heading,
  subheading,
  "after-subheading": afterSubheading,
  time
} = Astro.props;

let timetext = typeof time === "string" && time;

if (!timetext) {
  const dateFormat = Intl.DateTimeFormat("en", {
    year: "numeric", month: "long", timeZone: "UTC"
  });
  if (time instanceof Date) {
    timetext = dateFormat.format(time);
  } else if (time instanceof Array) {
    const [start, end] = time;
    timetext = end
      ? dateFormat.formatRange(start, end)
      : `${dateFormat.format(start)} - Present`;
  }
}

const { Content } = await entry?.render() ?? {};
---

<style>
  article > div :global(ul) {
    margin-left: 2ch;
    list-style-type: "- ";
    list-style-position: outside;
  }

  article > div :global(li) {
    margin-bottom: 0.3rem;
  }
</style>

<article class="m-3 mb-5 break-before-avoid break-inside-avoid">
  <header class="mb-2">
    {(Astro.slots.has("heading") || heading) && (
      <h3 class="leading-snug font-600 text-slate-700 text-lg tracking-tight">
        {link ? (
          <a
            class="group flex max-w-fit"
            href={link}
            target="_blank"
          >
            <span class="transition duration-200 font-650 underline underline-offset-3 decoration-2 decoration-sky-500 group-hover:text-sky-900 group-hover:decoration-3 group-hover:decoration-sky-400 print:underline-offset-2">
              <slot name="heading">{heading}</slot>
            </span>
            <div class="
              print:hidden
              i-ph-arrow-up-right-bold
              transition duration-300
              text-slate-500 opacity-50 scale-85
              group-hover:translate-x-1 group-hover:-translate-y-1
              group-hover:opacity-100 group-hover:scale-100
            "></div>
          </a>
        ) : (
          <slot name="heading">{heading}</slot>
        )}
      </h3>
    )}
    {(Astro.slots.has("subheading") || subheading) && (
      <p class="leading-tight text-slate-500 italic">
        <slot name="subheading">{subheading}</slot>
      </p>
    )}
    <slot name="after-subheading">
      <time class="leading-tight text-slate-500">{timetext || afterSubheading}</time>
    </slot>
  </header>
  {(Astro.slots.has("default") || Content) && (
    <div class="leading-tight">
      <slot>
        {Content && <Content />}
      </slot>
    </div>
  )}
</article>
