---
import { links } from "@/content";

type Props = { class?: string };

const pages = links.pages.map(page => {
  // Filter out pages that I don't want in the component
  switch (page.text.toLowerCase()) {
    case "resume": return;
  }
  // Find out which page is the current one
  const current = Astro.url.pathname === page.href
    || (page.href !== '/' && Astro.url.pathname.startsWith(page.href));
  return { "aria-current": current, ...page };
});
---

<style>
li:last-child > a { padding-right: 0 }

@media (hover: hover), (any-hover: hover) {
  .group:hover li:not(:hover) { opacity: 0.65 }
  .group:hover a:not(:hover) { opacity: 0.65 }
  li:hover { opacity: 1 !important }
  a:hover { 
    text-decoration-color: theme(colors.sky.400);
    text-decoration-thickness: 3px;
    opacity: 1 !important;
    color: black;
  }
}
</style>

<nav class:list={[Astro.props.class, "font-redhat font-500 text-sky-950"]}>
  <ul class="group w-max flex divide-x-1">
    {
      pages.map(link => {
        if (!link) return;
        const { text, ...attrs } = link;
        return (
          <li class="transition duration-900">
            <a
              class:list={[
                "py-3 px-3 sm:px-5 md:px-7 transition duration-200 underline underline-offset-5",
                {
                  "underline-3 decoration-sky-500": link["aria-current"],
                  "decoration-transparent": !link["aria-current"],
                }
              ]}
              { ...attrs }
            >
              {text}
            </a>
          </li>
        )
      })
    }
  </ul>
</nav>
